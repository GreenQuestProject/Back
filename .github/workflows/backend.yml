name: CI/CD Backend

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      database:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: greenquest_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, iconv, pdo_mysql
          tools: composer

      - name: Mise à jour des dépendances
        run: composer update

      - name: Installer les dépendances
        run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

      - name: Supprimer le schéma
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/greenquest_test
        run: php bin/console doctrine:schema:drop --force --full-database --no-interaction

      - name: Créer les tables avec Doctrine
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/greenquest_test
        run: php bin/console doctrine:schema:update --force --no-interaction

      - name: Reconstruire les clés JWT
        run: |
          mkdir -p config/jwt
          echo "${{ secrets.JWT_PRIVATE_KEY_B64 }}" | base64 -d > config/jwt/private.pem
          echo "${{ secrets.JWT_PUBLIC_KEY_B64 }}" | base64 -d > config/jwt/public.pem
          chmod 600 config/jwt/private.pem config/jwt/public.pem

      - name: Exécuter les tests
        env:
          DATABASE_URL: mysql://root:root@127.0.0.1:3306/greenquest
          JWT_PASSPHRASE: ${{ secrets.JWT_PASSPHRASE }}
        run: vendor/bin/phpunit

      - name: Connexion à DockerHub (ou GHCR)
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          docker build -t kteyssere/greenquest-backend:latest .
          docker push kteyssere/greenquest-backend:latest

      - name: Déploiement sur VPS
        if: github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v0.1.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          script: |
            # Se rendre dans le dossier du backend
            cd /var/www/backend
            
            # Créer ou mettre à jour le fichier de configuration Docker
            mkdir -p ~/.docker
            echo '{ "auths": { "https://index.docker.io/v1/": { "auth": "${{ secrets.DOCKER_AUTH }}" } } }' > ~/.docker/config.json
            
            # Puller l'image Docker depuis Docker Hub
            docker pull kteyssere/greenquest-backend:latest
            
            # Optionnel : arrêter les conteneurs existants
            docker-compose down
            
            # Lancer le nouveau conteneur avec la dernière image
            docker-compose up -d --build